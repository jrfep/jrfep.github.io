---
author: "Jos√© R. Ferrer Paris"
title: "This is how we built this!"
editor_options: 
  chunk_output_type: console
---

## No place like home

This is a test of a personal website for [jrfep](https://jrfep.github.io/).

These instructions are in English, but this site has content in multiple languages... I know it is confusing, but this is how I work. If you require clarifications please open an issue or send me a message. 

All files are available in a [GitHub repository](https://github.com/jrfep/jrfep.github.io).  The `mostly-harmless` branch uses [Quarto](https://quarto.org/docs/websites/) to build the site.


## Libraries

To manage and update the version of libraries that we need, we use `renv`:

We need to run different commands, until all the changes have been synchronised[^1] :

```{r}
#| eval: false
renv::init()
renv::status()
renv::install()
renv::status()
renv::snapshot()
```

## Render site

Using RStudio open the Build tab and select Build Website...

Sing [All the rowboats](https://youtu.be/2CZ8ossU4pc) in the meantime (optional).

If this work, we can just `git push` it to the repo and see the changes!

## Alternatives

My [other branch](https://github.com/jrfep/jrfep.github.io/tree/jekyll) uses Jekyll (but I gave up on that some time ago, so do not expect any updates).

I [also tried](https://github.com/jrfep/jrfep.github.io/tree/mrhyde) Rmarkdown for some time, might get back to that if this one does not work. 

I was tempted to create a multi-lingual site using [babelquarto](https://github.com/ropensci-review-tools/babelquarto):

```{r}
#| eval: false
install.packages('babelquarto', repos = c('https://ropensci.r-universe.dev', 'https://cloud.r-project.org'))
```

But it was a short-lived experiment. I think it could work for simple sites, but would require more tweaks to make it work with my current site. 

## Just in case

![ [Stand back, I know regular expressions.](https://xkcd.com/208/)](https://imgs.xkcd.com/comics/regular_expressions.png)

[^1]: Yes, I use this [weird spelling...](https://english.stackexchange.com/questions/230494/should-i-always-use-the-ised-ending-for-uk-english-and-the-ized-for-us)

## Flexdashboard and iNaturalist

Inspired by this example:
https://github.com/gonzalobravoargentina/inat_flexdashboard_ARG

### Get the data

I first install the `rinat` package:
```{r}
#| eval: false
here::i_am("README.Rmd")
if (!require(rinat)) {
  install.packages("rinat")
  library(rinat)
}
```

Then I can download the observations from iNaturalist and save them in a data folder:

```{r}
#| eval: false
# Download observations and save to RDS file
user_obs <- get_inat_obs_user("NeoMapas",maxresults = 5000)
if (!dir.exists(here::here("data")))
    dir.create(here::here("data"))
file_name <- here::here("data","iNaturalist-obs-NeoMapas.rds")
saveRDS(file=file_name, user_obs)

```

### Get a logo

With `wget` and ImageMagick, it is easy to download and resize in the terminal (`bash`) with two lines of code:

```sh
##mkdir 
wget https://neomapas.github.io/assets/images/logo_NeoMapas_p.gif
magick logo_NeoMapas_p.gif  -resize 100x148  resize_logo.gif
```

